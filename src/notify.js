// Generated by CoffeeScript 1.6.3
(function() {
  var User, api, mongoUri, mongoose, notifyUpdates, onGetPosts, _;

  _ = require('underscore');

  api = require('./apis.js');

  User = require('./models/user.js');

  onGetPosts = function(posts, callback) {
    return User.find({}, function(err, users) {
      var numUsersNotSaved, tags, user, _i, _len, _results;
      numUsersNotSaved = users.length;
      _results = [];
      for (_i = 0, _len = users.length; _i < _len; _i++) {
        user = users[_i];
        tags = _.union.apply(null, _.pluck(_.filter(posts, function(post) {
          return new Date(post.date) > new Date(user.lastUpdate);
        }), 'tags'));
        if (tags.length) {
          api.sendNotification(user.facebookId, "We have updated on some of the tags you are following: " + tags.join(', '));
        } else {
          console.log("No updates", tags);
        }
        user.lastUpdate = new Date();
        _results.push(user.save(function(e) {
          numUsersNotSaved -= 1;
          if (numUsersNotSaved === 0) {
            return typeof callback === "function" ? callback() : void 0;
          }
        }));
      }
      return _results;
    });
  };

  notifyUpdates = function(callback) {
    var blog;
    blog = api.getBlog("meavisa.tumblr.com");
    return blog.posts(function(err, data) {
      if (err) {
        throw err;
      }
      return onGetPosts(data.posts, callback);
    });
  };

  if (module === require.main) {
    mongoose = require('mongoose');
    mongoUri = process.env.MONGOLAB_URI || process.env.MONGOHQ_URL || 'mongodb://localhost/madb';
    mongoose.connect(mongoUri);
    notifyUpdates(function() {
      return mongoose.connection.close();
    });
  } else {
    exports.notifyNewPosts = notifyUpdates;
  }

}).call(this);
